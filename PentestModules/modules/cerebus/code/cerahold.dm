/obj/item/mecha_parts/mecha_equipment/cerehold
	name = "salvage holder"
	desc = "Holds the salvaging crew of a cerebus mech."
	icon = 'icons/obj/machines/sleeper.dmi'
	icon_state = "sleeper"
	energy_drain = 0
	range = MECHA_MELEE
	equip_cooldown = 20
	var/capacity = 3
	var/current_capacity = 0
	var/mob/living/carbon/salvager = null
	var/inject_amount = 10
	salvageable = 0

/obj/item/mecha_parts/mecha_equipment/cerehold/attach(obj/mecha/M)
	..()
	START_PROCESSING(SSobj, src)

/obj/item/mecha_parts/mecha_equipment/cerehold/Initialize()
	. = ..()
	START_PROCESSING(SSobj, src)

/obj/item/mecha_parts/mecha_equipment/cerehold/Destroy()
	STOP_PROCESSING(SSobj, src)
	for(var/atom/movable/AM in src)
		AM.forceMove(get_turf(src))
	return ..()

/obj/item/mecha_parts/mecha_equipment/cerehold/Exit(atom/movable/O)
	return 0

/obj/item/mecha_parts/mecha_equipment/cerehold/action(mob/living/carbon/target)
	if(!action_checks(target))
		return
	if(!istype(target))
		return
	if(!salvager_insertion_check(target))
		return
	occupant_message("<span class='notice'>You start putting [target] into [src]...</span>")
	chassis.visible_message("<span class='warning'>[chassis] starts putting [target] into \the [src].</span>")
	if(do_after_cooldown(target))
		if(!salvager_insertion_check(target))
			return
		target.forceMove(src)
		START_PROCESSING(SSobj, src)
		update_equip_info()
		occupant_message("<span class='notice'>[target] successfully loaded into [src]. Life support functions engaged.</span>")
		chassis.visible_message("<span class='warning'>[chassis] loads [target] into [src].</span>")
		log_message("[target] loaded. Life support functions engaged.", LOG_MECHA)
		current_capacity++

/obj/item/mecha_parts/mecha_equipment/cerehold/proc/salvager_insertion_check(mob/living/carbon/target)
	if(target.buckled)
		occupant_message("<span class='warning'>[target] will not fit into the sleeper because [target.p_theyre()] buckled to [target.buckled]!</span>")
		return
	if(target.has_buckled_mobs())
		occupant_message("<span class='warning'>[target] will not fit into the sleeper because of the creatures attached to it!</span>")
		return
	if(current_capacity==capacity)
		occupant_message("<span class='warning'>[target] will not fit because you already have [current_capacity] people in holding!</span>")
		return
	return 1



/obj/item/mecha_parts/mecha_equipment/cerehold/detach()
	if(current_capacity > 0)
		occupant_message("<span class='warning'>Unable to detach [src] - equipment occupied!</span>")
		return
	STOP_PROCESSING(SSobj, src)
	return ..()
/*
/obj/item/mecha_parts/mecha_equipment/cerehold/get_equip_info()
	var/output = ..()
	if(output)
		var/temp = ""
		if(salvager)
			temp = "<br />\[Occupant: [salvager] ([salvager.stat > 1 ? "*DECEASED*" : "Health: [salvager.health]%"])\]<br /><a href='?src=[REF(src)];view_stats=1'>View stats</a>|<a href='?src=[REF(src)];eject=1'>Eject</a>"
		return "[output] [temp]"
		*/



/obj/item/mecha_parts/mecha_equipment/cerehold/container_resist_act(mob/living/user)
	user.forceMove(get_turf(src))
	occupant_message("<span class='notice'>[salvager] ejected.</span>")
	current_capacity -=1

